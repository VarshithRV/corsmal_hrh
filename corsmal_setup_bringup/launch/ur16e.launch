<?xml version="1.0"?>
<launch>

    <arg name="debug" value="false" doc="Debug flag that will get passed on to ur_common.launch"/>
    <arg name="robot_ip" value="192.168.1.3" doc="IP address by which the robot can be reached."/>
    <arg name="reverse_ip" value="" doc="IP of the driver, if set to empty it will detect it automatically."/>
    <arg name="reverse_port" value="60001" doc="Port that will be opened by the driver to allow direct communication between the driver and the robot controller."/>
    <arg name="script_sender_port" value="60002" doc="The driver will offer an interface to receive the program's URScript on this port. If the robot cannot connect to this port, `External Control` will stop immediately."/>
    <arg name="trajectory_port" value="60003" doc="Port that will be opened by the driver to allow trajectory forwarding."/>
    <arg name="script_command_port" value="50004" doc="Port that will be opened by the driver to allow forwarding script commands to the robot."/>
    <arg name="tf_prefix" value="" doc="tf_prefix used for the robot."/>
    <arg name="controllers" value="joint_state_controller joint_group_vel_controller speed_scaling_state_controller force_torque_sensor_controller" doc="Controllers that are activated by default."/>
    <arg name="stopped_controllers" value="twist_controller joint_group_pos_controller scaled_pos_joint_traj_controller pos_joint_traj_controller" doc="Controllers that are initally loaded, but not started."/>
    <arg name="controller_config_file" value="$(find corsmal_setup_bringup)/config/ur16e_controller_config.yaml" doc="Config file used for defining the ROS-Control controllers."/>
    <arg name="robot_description_file" value="$(find ur_description)/launch/load_ur16e.launch" doc="Robot description launch file."/>
    <arg name="kinematics_config" value="$(find corsmal_setup_bringup)/config/right_ur16e_kinematics_config.yaml" doc="Kinematics config file used for calibration correction. This will be used to verify the robot's calibration is matching the robot_description."/>
    <arg name="tool0_tcp_x" default="0.0"/>
    <arg name="tool0_tcp_y" default="0.0"/>
    <arg name="tool0_tcp_z" default="0.15"/>
    <arg name="use_tool_communication" value="false" doc="On e-Series robots tool communication can be enabled with this argument"/>
    <arg name="tool_voltage" value="0" doc="Tool voltage set at the beginning of the UR program. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_parity" value="0" doc="Parity configuration used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_baud_rate" value="115200" doc="Baud rate used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_stop_bits" value="1" doc="Number of stop bits used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_rx_idle_chars" value="1.5" doc="Number of idle chars in RX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_tx_idle_chars" value="3.5" doc="Number of idle chars in TX channel used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_device_name" value="/tmp/ttyUR" doc="Local device name used for tool communication. Only used, when `use_tool_communication` is set to true."/>
    <arg name="tool_tcp_port" value="54321" doc="Port on which the robot controller publishes the tool comm interface. Only used, when `use_tool_communication` is set to true."/>
    <arg name="headless_mode" value="false" doc="Automatically send URScript to robot to execute. On e-Series this does require the robot to be in 'remote-control' mode. With this, the URCap is not needed on the robot."/>  
    <arg name="ur_hardware_interface_node_required" value="true" doc="Shut down ros environment if ur_hardware_interface-node dies."/>

    <!-- UR16e Driver -->
    <include file="$(find ur_robot_driver)/launch/ur_common.launch">
        <arg name="debug" value="$(arg debug)"/>
        <arg name="robot_ip" value="$(arg robot_ip)"/>
        <arg name="reverse_ip" value="$(arg reverse_ip)"/>
        <arg name="reverse_port" value="$(arg reverse_port)"/>
        <arg name="script_sender_port" value="$(arg script_sender_port)"/>
        <arg name="trajectory_port" value="$(arg trajectory_port)"/>
        <arg name="script_command_port" value="$(arg script_command_port)"/>
        <arg name="tf_prefix" value="$(arg tf_prefix)"/>
        <arg name="controllers" value="$(arg controllers)"/>
        <arg name="stopped_controllers" value="$(arg stopped_controllers)"/>
        <arg name="controller_config_file" value="$(arg controller_config_file)"/>
        <arg name="robot_description_file" value="$(arg robot_description_file)"/>
        <arg name="kinematics_config" value="$(arg kinematics_config)"/>
        <arg name="tool0_tcp_x" value="$(arg tool0_tcp_x)"/>
        <arg name="tool0_tcp_y" value="$(arg tool0_tcp_y)"/>
        <arg name="tool0_tcp_z" value="$(arg tool0_tcp_z)"/>
        <arg name="use_tool_communication" value="$(arg use_tool_communication)"/>
        <arg name="tool_voltage" value="$(arg tool_voltage)"/>
        <arg name="tool_parity" value="$(arg tool_parity)"/>
        <arg name="tool_baud_rate" value="$(arg tool_baud_rate)"/>
        <arg name="tool_stop_bits" value="$(arg tool_stop_bits)"/>
        <arg name="tool_rx_idle_chars" value="$(arg tool_rx_idle_chars)"/>
        <arg name="tool_tx_idle_chars" value="$(arg tool_tx_idle_chars)"/>
        <arg name="tool_device_name" value="$(arg tool_device_name)"/>
        <arg name="tool_tcp_port" value="$(arg tool_tcp_port)"/>
        <arg name="headless_mode" value="$(arg headless_mode)"/>
    </include>

    <include file="$(find ur16e_moveit_config)/launch/move_group.launch"/>
    <arg name="moveit_servo_config" default="$(find corsmal_setup_bringup)/config/moveit_servo.yaml"/>
    <node name="servo_server" pkg="moveit_servo" type="servo_server" output="screen" >
      <rosparam command="load" file="$(arg moveit_servo_config)"/>
    </node>

    <!-- timeout based stream to command filter for velocity command -->
    <node name="twist_stream_filter" pkg="grasp_control_actions" type="twist_stream_filter.py" output="screen">
        <param name="input_topic" value="/end_effector_cmd_vel" />
        <param name="output_topic" value="/servo_server/delta_twist_cmds" />
        <param name="output_topic_type" value="TwistStamped" />
        <param name="timeout" value="0.05" />
        <param name="source_frame" value="base_link" /> <!-- this is the planning frame -->
        <param name="target_frame" value="base_link" /> <!-- this is always base -->
        <param name="alpha" value="0.65"/>
    </node>

    <node pkg="corsmal_setup_bringup" type="calibration_publisher_robot.py" name="robot_calibration_publisher" />
</launch>